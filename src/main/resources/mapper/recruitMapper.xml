<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
 <mapper namespace="recruitMapper">
	
	<insert id="create" parameterType="user">
		insert into recruit(
			title,
			description,
			category_id,
			date_start,
			date_end,
			host,
			address,
			user_id,
			max_personnel,
			current_personnel,
			date_created,
			date_modified
		)values(
			#{title},
			#{description},
			#{categoryId},
			FROM_UNIXTIME(#{dateStart}),
			FROM_UNIXTIME(#{dateEnd}),
			#{host},
			#{address},
			#{userId},
			#{maxPersonnel},
			0,
			now(),
			now()
		)
	</insert>
 	
 	<update id="update" parameterType="user">
 		update recruit set
 			title = #{title},
 			description = #{description},
 			category_id = #{categoryId},
 			date_start = FROM_UNIXTIME(#{dateStart}),
 			date_end = FROM_UNIXTIME(#{dateEnd}),
 			host = #{host},
 			address = #{address},
 			max_personnel = #{maxPersonnel},
 			date_modified = now()
 		where id = #{id}
 	</update>
 	
 	<delete id="delete" parameterType="Integer">
		delete from recruit where id = #{id}
	</delete>
	
	<select id="getRecruit" parameterType="Integer" resultType="recruit">
		select 
			r.id as "id",
			r.title as "title",
			r.description as "description",
			r.category_id as "categoryId",
			c.name as "categoryName",
			UNIX_TIMESTAMP(r.date_start)*1000 as "dateStart",
			UNIX_TIMESTAMP(r.date_end)*1000 as "dateEnd",
			r.host as "host",
			r.address as "address",
			r.user_id as "userId",
			u.name as "userName",
			r.max_personnel as "maxPersonnel",
			r.current_personnel as "currentPersonnel",
			UNIX_TIMESTAMP(r.date_created)*1000 as "dateCreated",
			UNIX_TIMESTAMP(r.date_modified)*1000 as "dateModified"
		from
			recruit r
			left join category c on r.category_id = c.id
			left join user u on r.user_id = u.id
		where
			r.id = #{id}
	</select>
	
	<select id="listRecruits" parameterType="rqo" resultType="recruit">
		select 
			r.id as "id",
			r.title as "title",
			r.description as "description",
			r.category_id as "categoryId",
			c.name as "categoryName",
			UNIX_TIMESTAMP(r.date_start)*1000 as "dateStart",
			UNIX_TIMESTAMP(r.date_end)*1000 as "dateEnd",
			r.host as "host",
			r.address as "address",
			r.user_id as "userId",
			u.name as "userName",
			r.max_personnel as "maxPersonnel",
			r.current_personnel as "currentPersonnel",
			UNIX_TIMESTAMP(r.date_created)*1000 as "dateCreated",
			UNIX_TIMESTAMP(r.date_modified)*1000 as "dateModified"
		from
			recruit r
			left join category c on r.category_id = c.id
			left join user u on r.user_id = u.id
		<where>
		<!-- categoryId -->
			<if test="categoryId != null">
			and r.category_id in
				<foreach collection="categoryId" item="item" open="(" separator="," close=")">
				#{item}
				</foreach>
			</if>
		<!-- address -->
			<if test="address != null">
				and r.address REGEXP concat(
				<foreach collection="address" item="item" separator=",'|',">
				 #{item}
				</foreach>
				)
			</if>
		</where>
		order by
		<if test="sort != null">
			,
		</if>
			r.date_created desc
	</select>
	
 </mapper>